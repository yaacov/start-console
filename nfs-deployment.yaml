###############################################################################
# (1) ServiceAccount: "nfs-privileged"
###############################################################################
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfs-privileged
  namespace: openshift-mtv
---
###############################################################################
# (2) RoleBinding: Grant privileged SCC to service account
###############################################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nfs-privileged-scc
  namespace: openshift-mtv
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:privileged
subjects:
- kind: ServiceAccount
  name: nfs-privileged
  namespace: openshift-mtv
---
###############################################################################
# (3) PVC in Filesystem mode
###############################################################################
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc
  namespace: openshift-mtv
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "1Gi"
  storageClassName: kubevirt-csi-infra-default
  volumeMode: Filesystem
---
###############################################################################
# (4) Downloads OVA and then serve NFS
###############################################################################
apiVersion: v1
kind: Pod
metadata:
  name: nfs-server-with-downloader
  namespace: openshift-mtv
  labels:
    name: nfs-server
spec:
  serviceAccountName: nfs-privileged
  containers:
  - name: nfs-server
    image: itsthenetwork/nfs-server-alpine:latest
    env:
    - name: SHARED_DIRECTORY
      value: /exports
    - name: PERMITTED_CLIENTS
      value: "*"
    - name: OVA_URLS
      value: "https://github.com/kubev2v/forkliftci/releases/download/v9.0/vm.ova"
    securityContext:
      privileged: true
    ports:
    - name: nfs
      containerPort: 2049
      protocol: TCP
    - name: rpcbind
      containerPort: 111
      protocol: TCP
    - name: mountd
      containerPort: 20048
      protocol: TCP
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "200m"
    volumeMounts:
    - name: data-volume
      mountPath: /exports
      readOnly: false
    command: ["/bin/sh", "-c"]
    args:
      - |
        echo "Checking if volume is writable..."
        touch /exports/volume-check && rm /exports/volume-check
        
        echo "Creating ova subdirectory..."
        mkdir -p /exports/ova
        
        # Install curl for downloading
        apk add --no-cache curl
        
        # Parse URLs from environment variable (semicolon-separated)
        SUCCESS_COUNT=0
        TOTAL_URLS=0
        
        # Count URLs
        for url in $(echo "$OVA_URLS" | tr ';' ' '); do
          TOTAL_URLS=$((TOTAL_URLS+1))
        done
        
        # Download each URL
        for url in $(echo "$OVA_URLS" | tr ';' ' '); do
          # Extract filename from URL or default to index-based name
          filename=$(basename "$url")
          if [ -z "$filename" ]; then
            filename="vm-$((SUCCESS_COUNT+1)).ova"
          fi
          
          echo "Downloading $filename from $url..."
          curl -L --retry 5 --retry-delay 10 -o "/exports/ova/$filename" "$url"
          
          if [ $? -eq 0 ] && [ -s "/exports/ova/$filename" ]; then
            echo "Successfully downloaded $filename"
            SUCCESS_COUNT=$((SUCCESS_COUNT+1))
          else
            echo "Error downloading $filename from $url"
          fi
        done
        
        # Check if all downloads were successful
        if [ $SUCCESS_COUNT -eq $TOTAL_URLS ]; then
          echo "All downloads completed successfully."
          # Signal success for monitoring
          touch /exports/ova/download-complete
          
          # Start NFS server
          exec /usr/bin/nfsd.sh
        else
          echo "Some downloads failed: $SUCCESS_COUNT of $TOTAL_URLS succeeded"
          exit 1
        fi
  volumes:
  - name: data-volume
    persistentVolumeClaim:
      claimName: nfs-pvc

---
###############################################################################
# (5) NFS Server Service: exposes the NFS server
###############################################################################
apiVersion: v1
kind: Service
metadata:
  name: nfs-service
  namespace: openshift-mtv
spec:
  selector:
    name: nfs-server
  ports:
  - name: nfs
    port: 2049
    protocol: TCP
  - name: rpcbind
    port: 111
    protocol: TCP
  - name: mountd
    port: 20048
    protocol: TCP
